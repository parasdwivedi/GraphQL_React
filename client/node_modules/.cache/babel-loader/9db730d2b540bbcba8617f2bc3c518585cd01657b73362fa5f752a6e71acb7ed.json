{"ast":null,"code":"var _jsxFileName = \"/Users/p.dwivedi/Desktop/GraphQL/client/src/DisplayData.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useQuery, gql, useLazyQuery } from \"@apollo/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QUERY_ALL_USERS = gql`\nquery GetAllUsers{\n  users {\n    age\n    id\n    name\n    username\n    nationality\n  }\n}\n`;\nconst QUERY_ALL_MOVIES = gql`\nquery GetMovie{\n  movies{\n    name\n    id\n    yearOfPublication\n    isInTheaters\n\n  }\n}\n`;\nconst GET_MOVIE_BY_NAME = gql`\n    query Movie($name: String!) {\n        movie(name: $name){\n            name\n            yearOfPublication\n        }\n    }\n`;\nfunction DisplayData() {\n  _s();\n  const [movieSearched, setMovieSearched] = useState(\"\");\n\n  //create user state\n  const [name, setName] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [Age, setAge] = useState(0);\n  const [nationality, setNationality] = useState(\"\");\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(QUERY_ALL_USERS);\n  const {\n    data: data_movies\n  } = useQuery(QUERY_ALL_MOVIES);\n  const [fetchMovie, {\n    data: movieSearchData,\n    error: movieError\n  }] = useLazyQuery(GET_MOVIE_BY_NAME, {});\n  console.log(data_movies);\n  // if (loading){\n  //     return <h1>Data is loading</h1>\n  // }\n  // if (data){\n  //     console.log(data)\n  // }\n\n  // if(error){\n  //     console.log(error)\n  // }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Name...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Age...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Nationality...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Create User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), data && data.users.map(user => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Name : \", user.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Username : \", user.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Age : \", user.age]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Nationality: \", user.nationality]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 12\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Interstellar...\",\n        onChange: event => {\n          setMovieSearched(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          fetchMovie({\n            variables: {\n              name: movieSearched\n            }\n          });\n        },\n        children: \"Fetch Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: movieSearchData && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [\"MovieName : \", movieSearchData.movie.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [\"Year of Publication : \", movieSearchData.movie.yearOfPublication]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 12\n  }, this);\n}\n_s(DisplayData, \"IPOyXEBEQmjf5TTtIyjdLkK/TjY=\", false, function () {\n  return [useQuery, useQuery, useLazyQuery];\n});\n_c = DisplayData;\nexport default DisplayData;\nvar _c;\n$RefreshReg$(_c, \"DisplayData\");","map":{"version":3,"names":["React","useState","useQuery","gql","useLazyQuery","jsxDEV","_jsxDEV","QUERY_ALL_USERS","QUERY_ALL_MOVIES","GET_MOVIE_BY_NAME","DisplayData","_s","movieSearched","setMovieSearched","name","setName","username","setUsername","Age","setAge","nationality","setNationality","data","loading","error","data_movies","fetchMovie","movieSearchData","movieError","console","log","children","type","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","users","map","user","age","onChange","event","target","value","onClick","variables","movie","yearOfPublication","_c","$RefreshReg$"],"sources":["/Users/p.dwivedi/Desktop/GraphQL/client/src/DisplayData.js"],"sourcesContent":["import React, {useState} from \"react\"\nimport { useQuery, gql, useLazyQuery } from \"@apollo/client\";\nconst QUERY_ALL_USERS = gql `\nquery GetAllUsers{\n  users {\n    age\n    id\n    name\n    username\n    nationality\n  }\n}\n`;\n\nconst QUERY_ALL_MOVIES = gql `\nquery GetMovie{\n  movies{\n    name\n    id\n    yearOfPublication\n    isInTheaters\n\n  }\n}\n`;\n\nconst GET_MOVIE_BY_NAME = gql `\n    query Movie($name: String!) {\n        movie(name: $name){\n            name\n            yearOfPublication\n        }\n    }\n`;\n\n\nfunction DisplayData (){\n\n    const [movieSearched, setMovieSearched] = useState(\"\");\n\n    //create user state\n    const [name, setName] = useState(\"\");\n    const [username, setUsername] = useState(\"\");\n    const [Age, setAge] = useState(0);\n    const [nationality, setNationality] = useState(\"\");\n\n    const {data, loading, error} = useQuery(QUERY_ALL_USERS);\n    const {data: data_movies} = useQuery(QUERY_ALL_MOVIES)\n    const [fetchMovie, {data: movieSearchData, error: movieError}] = useLazyQuery(GET_MOVIE_BY_NAME, {})\n    console.log(data_movies)\n    // if (loading){\n    //     return <h1>Data is loading</h1>\n    // }\n    // if (data){\n    //     console.log(data)\n    // }\n\n    // if(error){\n    //     console.log(error)\n    // }\n    return <div>\n        <div>\n        <input type=\"text\" placeholder=\"Name...\" />\n        <input type=\"number\" placeholder=\"Age...\" />\n        <input type=\"text\" placeholder=\"Username...\" />\n        <input type=\"text\" placeholder=\"Nationality...\" />\n        <button>Create User</button>\n        </div>\n        {/* {data_movies && data_movies.movies.map((mov)=>{\n        return <div>\n            <h1>Name : {mov.name}</h1>\n            <h1>ID : {mov.id}</h1>\n            <h1>Year : {mov.yearOfPublication}</h1>\n            <h1>Avaliable in Theatres: {mov.isInTheaters}</h1>\n            {data && data.users.map((user)=>{\n\n})}\n        </div>\n        \n        })} */}\n    {data && data.users.map((user)=>{\n    return <div>\n            <h1>Name : {user.name}</h1>\n            <h1>Username : {user.username}</h1>\n            <h1>Age : {user.age}</h1>\n            <h1>Nationality: {user.nationality}</h1>\n        </div>\n    })}\n        <div>\n            <input type=\"text\" placeholder=\"Interstellar...\" onChange={(event)=> {setMovieSearched(event.target.value)}} />\n            <button onClick={()=> {\n                fetchMovie({variables: {\n                    name: movieSearched\n                }})\n            }}>Fetch Data</button>\n            <div>\n            {movieSearchData && <div> \n                <h1>MovieName : {movieSearchData.movie.name}</h1>\n                <h1>Year of Publication : {movieSearchData.movie.yearOfPublication}</h1>\n                </div>}\n            </div>\n        </div>\n        </div>\n}\n\nexport default DisplayData;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}