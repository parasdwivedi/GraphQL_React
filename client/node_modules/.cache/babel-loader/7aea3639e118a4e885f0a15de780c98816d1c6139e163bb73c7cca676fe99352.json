{"ast":null,"code":"var _jsxFileName = \"/Users/p.dwivedi/Desktop/GraphQL/client/src/DisplayData.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QUERY_ALL_USERS = gql`\nquery GetAllUsers{\n  users {\n    age\n    id\n    name\n    username\n    nationality\n  }\n}\n`;\nconst QUERY_ALL_MOVIES = gql`\nquery GetMovie{\n  movies{\n    name\n    id\n    yearOfPublication\n    isInTheaters\n\n  }\n}\n\n`;\nfunction DisplayData() {\n  _s();\n  const [movieSearched, setMovieSearched] = useState(\"\");\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(QUERY_ALL_USERS);\n  const {\n    data: data_movies\n  } = useQuery(QUERY_ALL_MOVIES);\n  console.log(data_movies);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Data is loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 16\n    }, this);\n  }\n  if (data) {\n    console.log(data);\n  }\n  if (error) {\n    console.log(error);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [data_movies && data_movies.movies.map(mov => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Name : \", mov.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"ID : \", mov.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Year : \", mov.yearOfPublication]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Avaliable in Theatres: \", mov.isInTheaters]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), data && data.users.map(user => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: [\"Name : \", user.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: [\"Username : \", user.username]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: [\"Age : \", user.age]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: [\"Nationality: \", user.nationality]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 16\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 16\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Interstellar...\",\n        onChange: event => {\n          setMovieSearched(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Fetch Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 12\n  }, this);\n}\n_s(DisplayData, \"w23i9yIXwAK4V2Ypkdcmrk0v79c=\", false, function () {\n  return [useQuery, useQuery];\n});\n_c = DisplayData;\nexport default DisplayData;\nvar _c;\n$RefreshReg$(_c, \"DisplayData\");","map":{"version":3,"names":["React","useQuery","gql","jsxDEV","_jsxDEV","QUERY_ALL_USERS","QUERY_ALL_MOVIES","DisplayData","_s","movieSearched","setMovieSearched","useState","data","loading","error","data_movies","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","movies","map","mov","name","id","yearOfPublication","isInTheaters","users","user","username","age","nationality","type","placeholder","onChange","event","target","value","_c","$RefreshReg$"],"sources":["/Users/p.dwivedi/Desktop/GraphQL/client/src/DisplayData.js"],"sourcesContent":["import React from \"react\"\nimport { useQuery, gql } from \"@apollo/client\";\nconst QUERY_ALL_USERS = gql `\nquery GetAllUsers{\n  users {\n    age\n    id\n    name\n    username\n    nationality\n  }\n}\n`;\n\nconst QUERY_ALL_MOVIES = gql `\nquery GetMovie{\n  movies{\n    name\n    id\n    yearOfPublication\n    isInTheaters\n\n  }\n}\n\n`;\n\nfunction DisplayData (){\n\n    const [movieSearched, setMovieSearched] = useState(\"\")\n    const {data, loading, error} = useQuery(QUERY_ALL_USERS);\n    const {data: data_movies} = useQuery(QUERY_ALL_MOVIES)\n    console.log(data_movies)\n    if (loading){\n        return <h1>Data is loading</h1>\n    }\n    if (data){\n        console.log(data)\n    }\n\n    if(error){\n        console.log(error)\n    }\n    return <div>\n        {data_movies && data_movies.movies.map((mov)=>{\n        return <div>\n            <h1>Name : {mov.name}</h1>\n            <h1>ID : {mov.id}</h1>\n            <h1>Year : {mov.yearOfPublication}</h1>\n            <h1>Avaliable in Theatres: {mov.isInTheaters}</h1>\n            {data && data.users.map((user)=>{\n        return <div>\n            <h1>Name : {user.name}</h1>\n            <h1>Username : {user.username}</h1>\n            <h1>Age : {user.age}</h1>\n            <h1>Nationality: {user.nationality}</h1>\n        </div>\n})}\n        </div>\n        \n        })}\n        <div>\n            <input type=\"text\" placeholder=\"Interstellar...\" onChange={(event)=> {setMovieSearched(event.target.value)}} />\n            <button>Fetch Data</button>\n            <div>\n\n            </div>\n        </div>\n        </div>\n}\n\nexport default DisplayData;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}