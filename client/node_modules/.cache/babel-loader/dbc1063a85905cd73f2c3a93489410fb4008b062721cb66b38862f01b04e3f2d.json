{"ast":null,"code":"var _jsxFileName = \"/Users/p.dwivedi/Desktop/GraphQL/client/src/DisplayData.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QUERY_ALL_USERS = gql`\nquery GetAllUsers{\n  users {\n    age\n    id\n    name\n    username\n    nationality\n  }\n}\n`;\nconst QUERY_ALL_MOVIES = gql`\nquery GetMovie{\n  movies{\n    name\n    id\n    yearOfPublication\n    isInTheaters\n\n  }\n}\n\n`;\nfunction DisplayData() {\n  _s();\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(QUERY_ALL_USERS);\n  const {\n    data: data_movies\n  } = useQuery(QUERY_ALL_MOVIES);\n  console.log(data_movies);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Data is loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 16\n    }, this);\n  }\n  if (data) {\n    console.log(data);\n  }\n  if (error) {\n    console.log(error);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: data_movies && data_movies.movies.map(mov => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Name : \", mov.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"ID : \", mov.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Year : \", mov.yearOfPublication]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Avaliable in Theatres: \", mov.isInTheaters]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 16\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 12\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: data && data.users.map(user => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Name : \", user.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Username : \", user.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Age : \", user.age]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Nationality: \", user.nationality]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 12\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 8\n  }, this);\n}\n_s(DisplayData, \"XV2ZObKOi3MnejQpPWOMC7XcIQk=\", false, function () {\n  return [useQuery, useQuery];\n});\n_c = DisplayData;\nexport default DisplayData;\nvar _c;\n$RefreshReg$(_c, \"DisplayData\");","map":{"version":3,"names":["React","useQuery","gql","jsxDEV","_jsxDEV","QUERY_ALL_USERS","QUERY_ALL_MOVIES","DisplayData","_s","data","loading","error","data_movies","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","movies","map","mov","name","id","yearOfPublication","isInTheaters","users","user","username","age","nationality","_c","$RefreshReg$"],"sources":["/Users/p.dwivedi/Desktop/GraphQL/client/src/DisplayData.js"],"sourcesContent":["import React from \"react\"\nimport { useQuery, gql } from \"@apollo/client\";\nconst QUERY_ALL_USERS = gql `\nquery GetAllUsers{\n  users {\n    age\n    id\n    name\n    username\n    nationality\n  }\n}\n`;\n\nconst QUERY_ALL_MOVIES = gql `\nquery GetMovie{\n  movies{\n    name\n    id\n    yearOfPublication\n    isInTheaters\n\n  }\n}\n\n`;\n\nfunction DisplayData (){\n    const {data, loading, error} = useQuery(QUERY_ALL_USERS);\n    const {data: data_movies} = useQuery(QUERY_ALL_MOVIES)\n    console.log(data_movies)\n    if (loading){\n        return <h1>Data is loading</h1>\n    }\n    if (data){\n        console.log(data)\n    }\n\n    if(error){\n        console.log(error)\n    }\n    return <div>{data_movies && data_movies.movies.map((mov)=>{\n        return <div>\n            <h1>Name : {mov.name}</h1>\n            <h1>ID : {mov.id}</h1>\n            <h1>Year : {mov.yearOfPublication}</h1>\n            <h1>Avaliable in Theatres: {mov.isInTheaters}</h1>\n        </div>\n        })}</div>\nreturn <div>{data && data.users.map((user)=>{\n    return <div>\n        <h1>Name : {user.name}</h1>\n        <h1>Username : {user.username}</h1>\n        <h1>Age : {user.age}</h1>\n        <h1>Nationality: {user.nationality}</h1>\n    </div>\n})}</div>\n}\n\nexport default DisplayData;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}